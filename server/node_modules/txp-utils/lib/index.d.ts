import * as logger from './node/logger';
/** 对象类 start */
/**
 * 描述：过滤对象，过滤掉值为null、undefined、NaN的键
 * @author DaoYuan
 * @date 2020-06-13
 * @param {any} param:需要过滤的对象
 * @param {any} fun:扩展过滤的方法
 * @param {any} key?:string
 * @param {any} obj?:object
 * @returns {any}
 */
export declare function filterObj(param: object, fun?: (value: any, key?: string, obj?: object) => boolean): {
    [key: string]: any;
};
/**
 * 描述
 * @author DaoYuan
 * @date 2020-06-13
 * @param {any} obj:对象值,如：obj
 * @param {any} str:链式字符串，如：obj.a.b.c
 * @returns {any}
 */
export declare function getChainObj(obj: object, str: string): any;
/** 对象类 end */
/** 数组类 start */
export declare function removal(list: (string | {
    [key: string]: string | number | boolean;
})[], key?: string): (string | {
    [key: string]: string | number | boolean;
})[];
/** 数组类 start */
/** 其他类 start */
/**
 * 描述:把数组里的除''和NaN的字符串和数字连接成字符串
 * @author DaoYuan
 * @date 2020-06-13
 * @param {any} list:any[]=[]
 * @param {any} mark:string='_'
 * @returns {any}
 */
export declare function join(list?: any[], mark?: string): string;
export declare type jsType = 'Number' | 'String' | 'Boolean' | 'Null' | 'Undefined' | 'Symbol' | 'BigInt' | 'Object' | 'Function' | 'Array' | 'Date';
/**
 * 描述 获取数据类型
 * @author DaoYuan
 * @date 2020-06-24
 * @param {any} params:any
 * @returns {any}
 */
export declare function getType(params: any): jsType;
export declare function contrast([main, assistant]: [{
    [key: string]: any;
}, {
    [key: string]: any;
}], fun: (params: any) => any): {
    [key: string]: any;
}[];
export declare function getValidValues(params: any, defaultValues?: string): any;
/** 其他类 end */
declare const _default: {
    filterObj: typeof filterObj;
    getChainObj: typeof getChainObj;
    join: typeof join;
    removal: typeof removal;
    contrast: typeof contrast;
    getValidValues: typeof getValidValues;
    node: {
        logger: typeof logger;
    };
};
export default _default;
//# sourceMappingURL=index.d.ts.map